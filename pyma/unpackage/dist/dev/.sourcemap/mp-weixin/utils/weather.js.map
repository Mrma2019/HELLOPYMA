{"version":3,"file":"weather.js","sources":["utils/weather.js"],"sourcesContent":["import config from \"@/config/config\";\r\nimport weatherStore from '@/store/weatherStore.js';\r\n\r\nexport default async function getWeather() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.getLocation({\r\n\t\t\ttype: 'gcj02',\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlatitude,\r\n\t\t\t\t\tlongitude\r\n\t\t\t\t} = res;\r\n\t\t\t\tuni.request({\r\n\t\t\t\t\turl: `${config.adCodeUrl}`,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tkey: `${config.apiKey}`,\r\n\t\t\t\t\t\tlocation: `${longitude},${latitude}`\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\t\t\tconst location = res.data.location[0];\r\n\t\t\t\t\t\t\t// console.log('位置信息',location);\r\n\t\t\t\t\t\t\tconst adcode = location.id;\r\n\r\n\t\t\t\t\t\t\tweatherStore.data.location = location;\r\n\t\t\t\t\t\t\t//实时天气\r\n\t\t\t\t\t\t\tgetWeatherByAdcode(adcode).then(resolve).catch(reject);\r\n\t\t\t\t\t\t\t//格点每日天气\r\n\t\t\t\t\t\t\tgetGridWeatherByAdcode(longitude, latitude).then(\r\n\t\t\t\t\t\t\t\tresolve).catch(reject);\r\n\t\t\t\t\t\t\t//天气指数\r\n\t\t\t\t\t\t\tgetIndices(longitude, latitude).then(resolve).catch(\r\n\t\t\t\t\t\t\t\treject)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: reject\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tfail: reject\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取实时天气\r\nexport async function getWeatherByAdcode(code) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.request({\r\n\t\t\turl: `${config.weatherUrl}`,\r\n\t\t\tdata: {\r\n\t\t\t\tkey: `${config.apiKey}`,\r\n\t\t\t\tlocation: code\r\n\t\t\t},\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\tconst weatherInfo = res.data.now;\r\n\t\t\t\t\tweatherStore.data = {\r\n\t\t\t\t\t\t...weatherInfo,\r\n\t\t\t\t\t\t...weatherStore.data\r\n\t\t\t\t\t};\r\n\t\t\t\t\tweatherStore.loading = false;\r\n\r\n\t\t\t\t\tresolve(weatherInfo);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject('获取天气数据失败');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: reject\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取格点天气\r\nexport async function getGridWeatherByAdcode(lon, lat) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.request({\r\n\t\t\turl: `${config.gridWeatherUrl}`,\r\n\t\t\tdata: {\r\n\t\t\t\tkey: `${config.apiKey}`,\r\n\t\t\t\tlocation: `${lon},${lat}`\r\n\t\t\t},\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\tconst girdInfo = res.data;\r\n\t\t\t\t\tweatherStore.girdInfo = girdInfo;\r\n\t\t\t\t\tresolve(girdInfo);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject('获取天气信息失败')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: reject\r\n\t\t})\r\n\t})\r\n}\r\n\r\n// 获取指标\r\nexport async function getIndices(lon, lat) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tuni.request({\r\n\t\t\turl: `${config.indicesUrl}`,\r\n\t\t\tdata: {\r\n\t\t\t\tkey: `${config.apiKey}`,\r\n\t\t\t\ttype: 1,\r\n\t\t\t\tlocation: `${lon},${lat}`\r\n\t\t\t},\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.data.code == 200) {\r\n\t\t\t\t\tconst indices = res.data;\r\n\t\t\t\t\t// console.log(indices);\r\n\t\t\t\t\tweatherStore.indices = indices;\r\n\r\n\t\t\t\t\tresolve(indices)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject('获取指数信息失败')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: reject\r\n\t\t})\r\n\t})\r\n}"],"names":["uni","config","res","weatherStore"],"mappings":"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"}